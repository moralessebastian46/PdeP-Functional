----------------------------------------------------------------------------TP 1----------------------------------------------------------------------------

Prueba punto 1:

*Main> :t Cliente
Cliente :: Nombre -> Resistencia -> Amigos -> Cliente


Prueba punto 2:

*Main> rodri
Cliente {nombre = "Rodri", resistencia = 55, amigos = []}
*Main> marcos
Cliente {nombre = "Marcos", resistencia = 40, amigos = [Cliente {nombre = "Rodri", resistencia = 55, amigos = []}]}
*Main> cristian
Cliente {nombre = "Cristian", resistencia = 2, amigos = []}
*Main> ana
Cliente {nombre = "Ana", resistencia = 120, amigos = [Cliente {nombre = "Marcos", resistencia = 40, amigos = [Cliente {nombre = "Rodri", resistencia = 55, amigos = []}]},Cliente {nombre = "Rodri", resistencia = 55, amigos = []}]}


Prueba punto 3:

*Main> comoEsta rodri
"fresco"
*Main> comoEsta marcos
"duro"
*Main> comoEsta cristian
"duro"
*Main> comoEsta (Cliente "Marcos" 40 [rodri, ana])
"piola"


Prueba punto 4:

*Main> hacerseAmigo ana ana
*** Exception: No pueden ser amigos porque tienen el mismo nombre
CallStack (from HasCallStack):
  error, called at TPFuncional1.hs:46:74 in main:Main
*Main> hacerseAmigo ana marcos
*** Exception: No puede ser agregado nuevamente porque ya son amigos
CallStack (from HasCallStack):
  error, called at TPFuncional1.hs:45:68 in main:Main
*Main> hacerseAmigo ana rodri
*** Exception: No puede ser agregado nuevamente porque ya son amigos
CallStack (from HasCallStack):
  error, called at TPFuncional1.hs:45:68 in main:Main
*Main> ((flip hacerseAmigo cristian).(flip hacerseAmigo ana).(flip hacerseAmigo marcos).(flip hacerseAmigo cristian)) ana
*** Exception: No puede ser agregado nuevamente porque ya son amigos
CallStack (from HasCallStack):
  error, called at TPFuncional1.hs:45:68 in main:Main


Prueba punto 5:

*Main> grogXD ana
Cliente {nombre = "Ana", resistencia = 0, amigos = [Cliente {nombre = "Marcos", resistencia = 40, amigos = [Cliente {nombre = "Rodri", resistencia = 55, amigos = []}]},Cliente {nombre = "Rodri", resistencia = 55, amigos = []}]}
*Main> laJarraLoca ana
Cliente {nombre = "Ana", resistencia = 110, amigos = [Cliente {nombre = "Marcos", resistencia = 30, amigos = [Cliente {nombre = "Rodri", resistencia = 55, amigos = []}]},Cliente {nombre = "Rodri", resistencia = 45, amigos = []}]}
*Main> klusener "huevo" ana
Cliente {nombre = "Ana", resistencia = 115, amigos = [Cliente {nombre = "Marcos", resistencia = 40, amigos = [Cliente {nombre = "Rodri", resistencia = 55, amigos = []}]},Cliente {nombre = "Rodri", resistencia = 55, amigos = []}]}
*Main> klusener "chocolate" ana
Cliente {nombre = "Ana", resistencia = 111, amigos = [Cliente {nombre = "Marcos", resistencia = 40, amigos = [Cliente {nombre = "Rodri", resistencia = 55, amigos = []}]},Cliente {nombre = "Rodri", resistencia = 55, amigos = []}]}
*Main> tintico cristian
Cliente {nombre = "Cristian", resistencia = 2, amigos = []}
*Main> tintico ana
Cliente {nombre = "Ana", resistencia = 130, amigos = [Cliente {nombre = "Marcos", resistencia = 40, amigos = [Cliente {nombre = "Rodri", resistencia = 55, amigos = []}]},Cliente {nombre = "Rodri", resistencia = 55, amigos = []}]}
*Main> soda 2 rodri
Cliente {nombre = "errpRodri", resistencia = 55, amigos = []}
*Main> soda 10 ana
Cliente {nombre = "errrrrrrrrrpAna", resistencia = 120, amigos = [Cliente {nombre = "Marcos", resistencia = 40, amigos = [Cliente {nombre = "Rodri", resistencia = 55, amigos = []}]},Cliente {nombre = "Rodri", resistencia = 55, amigos = []}]}
*Main> soda 0 ana
Cliente {nombre = "epAna", resistencia = 120, amigos = [Cliente {nombre = "Marcos", resistencia = 40, amigos = [Cliente {nombre = "Rodri", resistencia = 55, amigos = []}]},Cliente {nombre = "Rodri", resistencia = 55, amigos = []}]}
*Main> ((soda 5).(soda 2)) ana
Cliente {nombre = "errrrrperrpAna", resistencia = 120, amigos = [Cliente {nombre = "Marcos", resistencia = 40, amigos = [Cliente {nombre = "Rodri", resistencia = 55, amigos = []}]},Cliente {nombre = "Rodri", resistencia = 55, amigos = []}]}


Prueba punto 6:

*Main> rescatarse rodri 5
Cliente {nombre = "Rodri", resistencia = 255, amigos = []}
*Main> rescatarse rodri 1
Cliente {nombre = "Rodri", resistencia = 155, amigos = []}


Prueba punto 7:

*Main> ((klusener "huevo").(flip rescatarse 2).(klusener "chocolate").(laJarraLoca)) ana
Cliente {nombre = "Ana", resistencia = 196, amigos = [Cliente {nombre = "Marcos", resistencia = 30, amigos = [Cliente {nombre = "Rodri", resistencia = 55, amigos = []}]},Cliente {nombre = "Rodri", resistencia = 45, amigos = []}]}


----------------------------------------------------------------------------TP 2----------------------------------------------------------------------------


Punto 1b)

*Main> (length.bebidas.tomarUnaBebida (soda 3)) marcos
2

*Main> (resistencia.tomarUnaBebida (soda 3)) marcos
40


Punto 1c)

*Main> nombre (tomarTragos rodri [soda 1, soda 2])
"errperpRodri"

*Main> resistencia (tomarTragos marcos [klusener "Huevo", tintico, laJarraLoca])
30

*Main> (length.bebidas) (tomarTragos marcos [klusener "Huevo", tintico, laJarraLoca])
4


Punto 1d)

*Main> dameOtro ana
*** Exception: Prelude.last: empty list

*Main> (length.bebidas.dameOtro) marcos
2

*Main> (resistencia.dameOtro) marcos
34

*Main> (length.bebidas.dameOtro.(tomarUnaBebida (soda 1))) rodri

3

*Main> (nombre.dameOtro.tomarUnaBebida (soda 1)) rodri
"erperpRodri"


Punto 2b)

*Main> length (cualesPuedeTomar rodri [GrogXD, tintico, klusener "Frutilla"])
2

*Main> length (cualesPuedeTomar rodri [GrogXD, tintico, klusener "fruuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuutuuuuuuilla"])
1


Punto 3b)

*Main> (length.amigos) (ejecutarItinerario salidaDeAmigos rodri)
1

*Main> nombre (ejecutarItinerario salidaDeAmigos rodri)
"erpRodri"

*Main> resistencia (ejecutarItinerario salidaDeAmigos rodri)
45

*Main> (resistencia.head.amigos) (ejecutarItinerario salidaDeAmigos rodri)
155

*Main> (length.bebidas) (ejecutarItinerario salidaDeAmigos rodri)
4


Punto 4a)

*Main> intensidad mezclaExplosiva
1.6
*Main> intensidad itinerarioBasico
0.8
*Main> intensidad salidaDeAmigos
4.0


Punto 4b)

*Main> ejecutarMasIntenso rodri [salidaDeAmigos,mezclaExplosiva,itinerarioBasico]
Cliente {nombre = "erpRodri", resistencia = 45, amigos = [Cliente {nombre = "Roberto Carlos", resistencia = 155, amigos = [], bebidas = []}], bebidas = [laJarraLoca,tintico,Soda 1,tintico]}


Punto 6)

*Main> map nombre (amigos (laJarraPopular 0 (hacerseAmigo ana robertoCarlos)))
["Ana"]

*Main> map nombre (amigos (laJarraPopular 3 (hacerseAmigo ana robertoCarlos)))
["Rodri","Marcos","Ana"]

*Main> map nombre (amigos (laJarraPopular 4 (hacerseAmigo (hacerseAmigo ana cristian) robertoCarlos)))
["Rodri","Marcos","Ana","Cristian"]